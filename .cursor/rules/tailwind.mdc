---
description: 
globs: 
alwaysApply: true
---
# TailwindCSS Guidelines

## Class Ordering (MANDATORY)
Always follow this order: Layout → Spacing → Sizing → Colors → Typography → Effects → Interactions

```tsx
// ✅ Correct
className="flex flex-col gap-4 p-6 w-full bg-white text-gray-900 font-medium rounded-lg shadow-md hover:shadow-lg transition-shadow"

// ❌ Wrong
className="shadow-md bg-white font-medium text-gray-900 rounded-lg p-6 gap-4 w-full flex-col flex"
```

## Utility-First Approach
- Use utility classes directly in components
- Avoid custom CSS unless absolutely necessary
- Use `@apply` only for component base classes
- Extract repeated patterns into reusable component variables

## Responsive Design (Mobile-First)
- Always start with mobile styles, then add larger breakpoints
- Use `className="text-sm md:text-base lg:text-lg"`
- Show/hide elements: `className="block md:hidden"` and `className="hidden md:block"`

## Accessibility Requirements
- Always include focus states: `focus:ring-2 focus:ring-blue-500 focus:ring-offset-2`
- Use semantic class names for components: `article-card`, `cta-button`
- Include screen reader text: `<span className="sr-only">Screen reader text</span>`
- Proper ARIA attributes: `aria-label`, `aria-hidden="true"`

## Color System
- Use semantic color names in theme: `--color-primary`, `--color-success`
- Prefer OKLCH colors for wider gamut: `oklch(0.6 0.2 250)`
- Ensure proper contrast ratios for accessibility
- Define dark mode overrides in `:root.dark`

## Component Patterns
- Button: `"inline-flex items-center justify-center px-4 py-2 rounded-md transition-colors focus:outline-none focus:ring-2"`
- Card: `"bg-white rounded-lg border border-gray-200 shadow-sm hover:shadow-md transition-shadow"`
- Container: `"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8"`

## Performance Optimization
- Group related styles into variables
- Use `@layer` for proper CSS cascade
- Avoid excessive hover effects and complex animations
- Leverage v4.0 automatic content detection

## Anti-Patterns (AVOID)
- Don't mix with inline styles: `style={{margin: '10px'}}`
- Don't overuse `!important` or forced utilities
- Don't repeat utilities: use `m-1` instead of `mt-1 mb-1 ml-1 mr-1`
- Don't use non-semantic class names: `comp1`, `btn1`

## v4.0 New Features
- Container queries: `@container` with `@sm:`, `@md:`, `@lg:`
- Dynamic utilities: `grid-cols-7`, `mt-17`, `px-23` (any value)
- 3D transforms: `perspective-1000`, `rotate-x-45`, `transform-3d`
- Enhanced gradients: `bg-linear-45`, `bg-conic`, `bg-radial-[at_center]`
- Starting styles: `starting:open:opacity-0`

## Code Organization
- Extract component styles into constants
- Use descriptive variable names for style groups
- Keep related styles together
- Follow consistent naming conventions








